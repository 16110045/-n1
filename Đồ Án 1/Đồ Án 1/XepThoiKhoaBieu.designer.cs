#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Đồ_Án_1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="XepThoiKhoaBieuDH")]
	public partial class XepThoiKhoaBieuDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTiet(Tiet instance);
    partial void UpdateTiet(Tiet instance);
    partial void DeleteTiet(Tiet instance);
    partial void InsertThoiKhoaBieu(ThoiKhoaBieu instance);
    partial void UpdateThoiKhoaBieu(ThoiKhoaBieu instance);
    partial void DeleteThoiKhoaBieu(ThoiKhoaBieu instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertPhongHoc(PhongHoc instance);
    partial void UpdatePhongHoc(PhongHoc instance);
    partial void DeletePhongHoc(PhongHoc instance);
    partial void InsertNganh(Nganh instance);
    partial void UpdateNganh(Nganh instance);
    partial void DeleteNganh(Nganh instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertLop(Lop instance);
    partial void UpdateLop(Lop instance);
    partial void DeleteLop(Lop instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertChiTietLop_GV(ChiTietLop_GV instance);
    partial void UpdateChiTietLop_GV(ChiTietLop_GV instance);
    partial void DeleteChiTietLop_GV(ChiTietLop_GV instance);
    partial void InsertBoMon(BoMon instance);
    partial void UpdateBoMon(BoMon instance);
    partial void DeleteBoMon(BoMon instance);
    #endregion
		
		public XepThoiKhoaBieuDataContext() : 
				base(global::Đồ_Án_1.Properties.Settings.Default.XepThoiKhoaBieuDHConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public XepThoiKhoaBieuDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XepThoiKhoaBieuDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XepThoiKhoaBieuDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public XepThoiKhoaBieuDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tiet> Tiets
		{
			get
			{
				return this.GetTable<Tiet>();
			}
		}
		
		public System.Data.Linq.Table<ThoiKhoaBieu> ThoiKhoaBieus
		{
			get
			{
				return this.GetTable<ThoiKhoaBieu>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<PhongHoc> PhongHocs
		{
			get
			{
				return this.GetTable<PhongHoc>();
			}
		}
		
		public System.Data.Linq.Table<Nganh> Nganhs
		{
			get
			{
				return this.GetTable<Nganh>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<Lop> Lops
		{
			get
			{
				return this.GetTable<Lop>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietLop_GV> ChiTietLop_GVs
		{
			get
			{
				return this.GetTable<ChiTietLop_GV>();
			}
		}
		
		public System.Data.Linq.Table<BoMon> BoMons
		{
			get
			{
				return this.GetTable<BoMon>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tiet")]
	public partial class Tiet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private System.Nullable<int> _Tiet1;
		
		private System.Nullable<int> _Thu;
		
		private string _Time;
		
		private EntitySet<ThoiKhoaBieu> _ThoiKhoaBieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnTiet1Changing(System.Nullable<int> value);
    partial void OnTiet1Changed();
    partial void OnThuChanging(System.Nullable<int> value);
    partial void OnThuChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    #endregion
		
		public Tiet()
		{
			this._ThoiKhoaBieus = new EntitySet<ThoiKhoaBieu>(new Action<ThoiKhoaBieu>(this.attach_ThoiKhoaBieus), new Action<ThoiKhoaBieu>(this.detach_ThoiKhoaBieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Tiet", Storage="_Tiet1", DbType="Int")]
		public System.Nullable<int> Tiet1
		{
			get
			{
				return this._Tiet1;
			}
			set
			{
				if ((this._Tiet1 != value))
				{
					this.OnTiet1Changing(value);
					this.SendPropertyChanging();
					this._Tiet1 = value;
					this.SendPropertyChanged("Tiet1");
					this.OnTiet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thu", DbType="Int")]
		public System.Nullable<int> Thu
		{
			get
			{
				return this._Thu;
			}
			set
			{
				if ((this._Thu != value))
				{
					this.OnThuChanging(value);
					this.SendPropertyChanging();
					this._Thu = value;
					this.SendPropertyChanged("Thu");
					this.OnThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(50)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tiet_ThoiKhoaBieu", Storage="_ThoiKhoaBieus", ThisKey="STT", OtherKey="MaTiet")]
		public EntitySet<ThoiKhoaBieu> ThoiKhoaBieus
		{
			get
			{
				return this._ThoiKhoaBieus;
			}
			set
			{
				this._ThoiKhoaBieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.Tiet = this;
		}
		
		private void detach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.Tiet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThoiKhoaBieu")]
	public partial class ThoiKhoaBieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPH;
		
		private int _MaMH;
		
		private int _MaLop;
		
		private int _MaGV;
		
		private int _MaTiet;
		
		private EntityRef<Tiet> _Tiet;
		
		private EntityRef<PhongHoc> _PhongHoc;
		
		private EntityRef<MonHoc> _MonHoc;
		
		private EntityRef<Lop> _Lop;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPHChanging(int value);
    partial void OnMaPHChanged();
    partial void OnMaMHChanging(int value);
    partial void OnMaMHChanged();
    partial void OnMaLopChanging(int value);
    partial void OnMaLopChanged();
    partial void OnMaGVChanging(int value);
    partial void OnMaGVChanged();
    partial void OnMaTietChanging(int value);
    partial void OnMaTietChanged();
    #endregion
		
		public ThoiKhoaBieu()
		{
			this._Tiet = default(EntityRef<Tiet>);
			this._PhongHoc = default(EntityRef<PhongHoc>);
			this._MonHoc = default(EntityRef<MonHoc>);
			this._Lop = default(EntityRef<Lop>);
			this._GiaoVien = default(EntityRef<GiaoVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPH
		{
			get
			{
				return this._MaPH;
			}
			set
			{
				if ((this._MaPH != value))
				{
					if (this._PhongHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPHChanging(value);
					this.SendPropertyChanging();
					this._MaPH = value;
					this.SendPropertyChanged("MaPH");
					this.OnMaPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTiet", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTiet
		{
			get
			{
				return this._MaTiet;
			}
			set
			{
				if ((this._MaTiet != value))
				{
					if (this._Tiet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTietChanging(value);
					this.SendPropertyChanging();
					this._MaTiet = value;
					this.SendPropertyChanged("MaTiet");
					this.OnMaTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tiet_ThoiKhoaBieu", Storage="_Tiet", ThisKey="MaTiet", OtherKey="STT", IsForeignKey=true)]
		public Tiet Tiet
		{
			get
			{
				return this._Tiet.Entity;
			}
			set
			{
				Tiet previousValue = this._Tiet.Entity;
				if (((previousValue != value) 
							|| (this._Tiet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tiet.Entity = null;
						previousValue.ThoiKhoaBieus.Remove(this);
					}
					this._Tiet.Entity = value;
					if ((value != null))
					{
						value.ThoiKhoaBieus.Add(this);
						this._MaTiet = value.STT;
					}
					else
					{
						this._MaTiet = default(int);
					}
					this.SendPropertyChanged("Tiet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongHoc_ThoiKhoaBieu", Storage="_PhongHoc", ThisKey="MaPH", OtherKey="MaPH", IsForeignKey=true)]
		public PhongHoc PhongHoc
		{
			get
			{
				return this._PhongHoc.Entity;
			}
			set
			{
				PhongHoc previousValue = this._PhongHoc.Entity;
				if (((previousValue != value) 
							|| (this._PhongHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhongHoc.Entity = null;
						previousValue.ThoiKhoaBieus.Remove(this);
					}
					this._PhongHoc.Entity = value;
					if ((value != null))
					{
						value.ThoiKhoaBieus.Add(this);
						this._MaPH = value.MaPH;
					}
					else
					{
						this._MaPH = default(int);
					}
					this.SendPropertyChanged("PhongHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_ThoiKhoaBieu", Storage="_MonHoc", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.ThoiKhoaBieus.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.ThoiKhoaBieus.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(int);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_ThoiKhoaBieu", Storage="_Lop", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.ThoiKhoaBieus.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.ThoiKhoaBieus.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(int);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_ThoiKhoaBieu", Storage="_GiaoVien", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.ThoiKhoaBieus.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.ThoiKhoaBieus.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(int);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDangNhap;
		
		private System.Nullable<int> _MatKhau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(System.Nullable<int> value);
    partial void OnMatKhauChanged();
    #endregion
		
		public TaiKhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="Int")]
		public System.Nullable<int> MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhongHoc")]
	public partial class PhongHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPH;
		
		private string _TenPH;
		
		private System.Nullable<int> _DungLuong;
		
		private EntitySet<ThoiKhoaBieu> _ThoiKhoaBieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPHChanging(int value);
    partial void OnMaPHChanged();
    partial void OnTenPHChanging(string value);
    partial void OnTenPHChanged();
    partial void OnDungLuongChanging(System.Nullable<int> value);
    partial void OnDungLuongChanged();
    #endregion
		
		public PhongHoc()
		{
			this._ThoiKhoaBieus = new EntitySet<ThoiKhoaBieu>(new Action<ThoiKhoaBieu>(this.attach_ThoiKhoaBieus), new Action<ThoiKhoaBieu>(this.detach_ThoiKhoaBieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPH
		{
			get
			{
				return this._MaPH;
			}
			set
			{
				if ((this._MaPH != value))
				{
					this.OnMaPHChanging(value);
					this.SendPropertyChanging();
					this._MaPH = value;
					this.SendPropertyChanged("MaPH");
					this.OnMaPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPH", DbType="NVarChar(50)")]
		public string TenPH
		{
			get
			{
				return this._TenPH;
			}
			set
			{
				if ((this._TenPH != value))
				{
					this.OnTenPHChanging(value);
					this.SendPropertyChanging();
					this._TenPH = value;
					this.SendPropertyChanged("TenPH");
					this.OnTenPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DungLuong", DbType="Int")]
		public System.Nullable<int> DungLuong
		{
			get
			{
				return this._DungLuong;
			}
			set
			{
				if ((this._DungLuong != value))
				{
					this.OnDungLuongChanging(value);
					this.SendPropertyChanging();
					this._DungLuong = value;
					this.SendPropertyChanged("DungLuong");
					this.OnDungLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhongHoc_ThoiKhoaBieu", Storage="_ThoiKhoaBieus", ThisKey="MaPH", OtherKey="MaPH")]
		public EntitySet<ThoiKhoaBieu> ThoiKhoaBieus
		{
			get
			{
				return this._ThoiKhoaBieus;
			}
			set
			{
				this._ThoiKhoaBieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.PhongHoc = this;
		}
		
		private void detach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.PhongHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nganh")]
	public partial class Nganh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNganh;
		
		private string _TenNganh;
		
		private EntitySet<Lop> _Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNganhChanging(int value);
    partial void OnMaNganhChanged();
    partial void OnTenNganhChanging(string value);
    partial void OnTenNganhChanged();
    #endregion
		
		public Nganh()
		{
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNganh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNganh
		{
			get
			{
				return this._MaNganh;
			}
			set
			{
				if ((this._MaNganh != value))
				{
					this.OnMaNganhChanging(value);
					this.SendPropertyChanging();
					this._MaNganh = value;
					this.SendPropertyChanged("MaNganh");
					this.OnMaNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNganh", DbType="NVarChar(50)")]
		public string TenNganh
		{
			get
			{
				return this._TenNganh;
			}
			set
			{
				if ((this._TenNganh != value))
				{
					this.OnTenNganhChanging(value);
					this.SendPropertyChanging();
					this._TenNganh = value;
					this.SendPropertyChanged("TenNganh");
					this.OnTenNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nganh_Lop", Storage="_Lops", ThisKey="MaNganh", OtherKey="MaNganh")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Nganh = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Nganh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMH;
		
		private string _TenMH;
		
		private System.Nullable<int> _MaBM;
		
		private EntitySet<ThoiKhoaBieu> _ThoiKhoaBieus;
		
		private EntityRef<BoMon> _BoMon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMHChanging(int value);
    partial void OnMaMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    partial void OnMaBMChanging(System.Nullable<int> value);
    partial void OnMaBMChanged();
    #endregion
		
		public MonHoc()
		{
			this._ThoiKhoaBieus = new EntitySet<ThoiKhoaBieu>(new Action<ThoiKhoaBieu>(this.attach_ThoiKhoaBieus), new Action<ThoiKhoaBieu>(this.detach_ThoiKhoaBieus));
			this._BoMon = default(EntityRef<BoMon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(50)")]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBM", DbType="Int")]
		public System.Nullable<int> MaBM
		{
			get
			{
				return this._MaBM;
			}
			set
			{
				if ((this._MaBM != value))
				{
					if (this._BoMon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBMChanging(value);
					this.SendPropertyChanging();
					this._MaBM = value;
					this.SendPropertyChanged("MaBM");
					this.OnMaBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_ThoiKhoaBieu", Storage="_ThoiKhoaBieus", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<ThoiKhoaBieu> ThoiKhoaBieus
		{
			get
			{
				return this._ThoiKhoaBieus;
			}
			set
			{
				this._ThoiKhoaBieus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoMon_MonHoc", Storage="_BoMon", ThisKey="MaBM", OtherKey="MaBM", IsForeignKey=true)]
		public BoMon BoMon
		{
			get
			{
				return this._BoMon.Entity;
			}
			set
			{
				BoMon previousValue = this._BoMon.Entity;
				if (((previousValue != value) 
							|| (this._BoMon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BoMon.Entity = null;
						previousValue.MonHocs.Remove(this);
					}
					this._BoMon.Entity = value;
					if ((value != null))
					{
						value.MonHocs.Add(this);
						this._MaBM = value.MaBM;
					}
					else
					{
						this._MaBM = default(Nullable<int>);
					}
					this.SendPropertyChanged("BoMon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lop")]
	public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLop;
		
		private string _TenLop;
		
		private System.Nullable<int> _SoSV;
		
		private System.Nullable<int> _MaNganh;
		
		private EntitySet<ThoiKhoaBieu> _ThoiKhoaBieus;
		
		private EntitySet<ChiTietLop_GV> _ChiTietLop_GVs;
		
		private EntityRef<Nganh> _Nganh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(int value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnSoSVChanging(System.Nullable<int> value);
    partial void OnSoSVChanged();
    partial void OnMaNganhChanging(System.Nullable<int> value);
    partial void OnMaNganhChanged();
    #endregion
		
		public Lop()
		{
			this._ThoiKhoaBieus = new EntitySet<ThoiKhoaBieu>(new Action<ThoiKhoaBieu>(this.attach_ThoiKhoaBieus), new Action<ThoiKhoaBieu>(this.detach_ThoiKhoaBieus));
			this._ChiTietLop_GVs = new EntitySet<ChiTietLop_GV>(new Action<ChiTietLop_GV>(this.attach_ChiTietLop_GVs), new Action<ChiTietLop_GV>(this.detach_ChiTietLop_GVs));
			this._Nganh = default(EntityRef<Nganh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(50)")]
		public string TenLop
		{
			get
			{
				return this._TenLop;
			}
			set
			{
				if ((this._TenLop != value))
				{
					this.OnTenLopChanging(value);
					this.SendPropertyChanging();
					this._TenLop = value;
					this.SendPropertyChanged("TenLop");
					this.OnTenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoSV", DbType="Int")]
		public System.Nullable<int> SoSV
		{
			get
			{
				return this._SoSV;
			}
			set
			{
				if ((this._SoSV != value))
				{
					this.OnSoSVChanging(value);
					this.SendPropertyChanging();
					this._SoSV = value;
					this.SendPropertyChanged("SoSV");
					this.OnSoSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNganh", DbType="Int")]
		public System.Nullable<int> MaNganh
		{
			get
			{
				return this._MaNganh;
			}
			set
			{
				if ((this._MaNganh != value))
				{
					if (this._Nganh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNganhChanging(value);
					this.SendPropertyChanging();
					this._MaNganh = value;
					this.SendPropertyChanged("MaNganh");
					this.OnMaNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_ThoiKhoaBieu", Storage="_ThoiKhoaBieus", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<ThoiKhoaBieu> ThoiKhoaBieus
		{
			get
			{
				return this._ThoiKhoaBieus;
			}
			set
			{
				this._ThoiKhoaBieus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_ChiTietLop_GV", Storage="_ChiTietLop_GVs", ThisKey="MaLop", OtherKey="MaLop")]
		public EntitySet<ChiTietLop_GV> ChiTietLop_GVs
		{
			get
			{
				return this._ChiTietLop_GVs;
			}
			set
			{
				this._ChiTietLop_GVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nganh_Lop", Storage="_Nganh", ThisKey="MaNganh", OtherKey="MaNganh", IsForeignKey=true)]
		public Nganh Nganh
		{
			get
			{
				return this._Nganh.Entity;
			}
			set
			{
				Nganh previousValue = this._Nganh.Entity;
				if (((previousValue != value) 
							|| (this._Nganh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nganh.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._Nganh.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._MaNganh = value.MaNganh;
					}
					else
					{
						this._MaNganh = default(Nullable<int>);
					}
					this.SendPropertyChanged("Nganh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
		
		private void attach_ChiTietLop_GVs(ChiTietLop_GV entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_ChiTietLop_GVs(ChiTietLop_GV entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGV;
		
		private string _TenGV;
		
		private string _GioiTinh;
		
		private string _SDT;
		
		private string _ChucVu;
		
		private string _Email;
		
		private System.Nullable<int> _MaBM;
		
		private string _DiaChi;
		
		private string _NgaySinh;
		
		private EntitySet<ThoiKhoaBieu> _ThoiKhoaBieus;
		
		private EntitySet<ChiTietLop_GV> _ChiTietLop_GVs;
		
		private EntityRef<BoMon> _BoMon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(int value);
    partial void OnMaGVChanged();
    partial void OnTenGVChanging(string value);
    partial void OnTenGVChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMaBMChanging(System.Nullable<int> value);
    partial void OnMaBMChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNgaySinhChanging(string value);
    partial void OnNgaySinhChanged();
    #endregion
		
		public GiaoVien()
		{
			this._ThoiKhoaBieus = new EntitySet<ThoiKhoaBieu>(new Action<ThoiKhoaBieu>(this.attach_ThoiKhoaBieus), new Action<ThoiKhoaBieu>(this.detach_ThoiKhoaBieus));
			this._ChiTietLop_GVs = new EntitySet<ChiTietLop_GV>(new Action<ChiTietLop_GV>(this.attach_ChiTietLop_GVs), new Action<ChiTietLop_GV>(this.detach_ChiTietLop_GVs));
			this._BoMon = default(EntityRef<BoMon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGV", DbType="NVarChar(50)")]
		public string TenGV
		{
			get
			{
				return this._TenGV;
			}
			set
			{
				if ((this._TenGV != value))
				{
					this.OnTenGVChanging(value);
					this.SendPropertyChanging();
					this._TenGV = value;
					this.SendPropertyChanged("TenGV");
					this.OnTenGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(50)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(50)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBM", DbType="Int")]
		public System.Nullable<int> MaBM
		{
			get
			{
				return this._MaBM;
			}
			set
			{
				if ((this._MaBM != value))
				{
					if (this._BoMon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBMChanging(value);
					this.SendPropertyChanging();
					this._MaBM = value;
					this.SendPropertyChanged("MaBM");
					this.OnMaBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="NVarChar(50)")]
		public string NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_ThoiKhoaBieu", Storage="_ThoiKhoaBieus", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<ThoiKhoaBieu> ThoiKhoaBieus
		{
			get
			{
				return this._ThoiKhoaBieus;
			}
			set
			{
				this._ThoiKhoaBieus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_ChiTietLop_GV", Storage="_ChiTietLop_GVs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<ChiTietLop_GV> ChiTietLop_GVs
		{
			get
			{
				return this._ChiTietLop_GVs;
			}
			set
			{
				this._ChiTietLop_GVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoMon_GiaoVien", Storage="_BoMon", ThisKey="MaBM", OtherKey="MaBM", IsForeignKey=true)]
		public BoMon BoMon
		{
			get
			{
				return this._BoMon.Entity;
			}
			set
			{
				BoMon previousValue = this._BoMon.Entity;
				if (((previousValue != value) 
							|| (this._BoMon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BoMon.Entity = null;
						previousValue.GiaoViens.Remove(this);
					}
					this._BoMon.Entity = value;
					if ((value != null))
					{
						value.GiaoViens.Add(this);
						this._MaBM = value.MaBM;
					}
					else
					{
						this._MaBM = default(Nullable<int>);
					}
					this.SendPropertyChanged("BoMon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_ChiTietLop_GVs(ChiTietLop_GV entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_ChiTietLop_GVs(ChiTietLop_GV entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[ChiTietLop-GV]")]
	public partial class ChiTietLop_GV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLop;
		
		private int _MaGV;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<Lop> _Lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(int value);
    partial void OnMaLopChanged();
    partial void OnMaGVChanging(int value);
    partial void OnMaGVChanged();
    #endregion
		
		public ChiTietLop_GV()
		{
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._Lop = default(EntityRef<Lop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_ChiTietLop_GV", Storage="_GiaoVien", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.ChiTietLop_GVs.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.ChiTietLop_GVs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(int);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_ChiTietLop_GV", Storage="_Lop", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.ChiTietLop_GVs.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.ChiTietLop_GVs.Add(this);
						this._MaLop = value.MaLop;
					}
					else
					{
						this._MaLop = default(int);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BoMon")]
	public partial class BoMon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBM;
		
		private string _TenBM;
		
		private EntitySet<MonHoc> _MonHocs;
		
		private EntitySet<GiaoVien> _GiaoViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBMChanging(int value);
    partial void OnMaBMChanged();
    partial void OnTenBMChanging(string value);
    partial void OnTenBMChanged();
    #endregion
		
		public BoMon()
		{
			this._MonHocs = new EntitySet<MonHoc>(new Action<MonHoc>(this.attach_MonHocs), new Action<MonHoc>(this.detach_MonHocs));
			this._GiaoViens = new EntitySet<GiaoVien>(new Action<GiaoVien>(this.attach_GiaoViens), new Action<GiaoVien>(this.detach_GiaoViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBM
		{
			get
			{
				return this._MaBM;
			}
			set
			{
				if ((this._MaBM != value))
				{
					this.OnMaBMChanging(value);
					this.SendPropertyChanging();
					this._MaBM = value;
					this.SendPropertyChanged("MaBM");
					this.OnMaBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBM", DbType="NVarChar(50)")]
		public string TenBM
		{
			get
			{
				return this._TenBM;
			}
			set
			{
				if ((this._TenBM != value))
				{
					this.OnTenBMChanging(value);
					this.SendPropertyChanging();
					this._TenBM = value;
					this.SendPropertyChanged("TenBM");
					this.OnTenBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoMon_MonHoc", Storage="_MonHocs", ThisKey="MaBM", OtherKey="MaBM")]
		public EntitySet<MonHoc> MonHocs
		{
			get
			{
				return this._MonHocs;
			}
			set
			{
				this._MonHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoMon_GiaoVien", Storage="_GiaoViens", ThisKey="MaBM", OtherKey="MaBM")]
		public EntitySet<GiaoVien> GiaoViens
		{
			get
			{
				return this._GiaoViens;
			}
			set
			{
				this._GiaoViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MonHocs(MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.BoMon = this;
		}
		
		private void detach_MonHocs(MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.BoMon = null;
		}
		
		private void attach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.BoMon = this;
		}
		
		private void detach_GiaoViens(GiaoVien entity)
		{
			this.SendPropertyChanging();
			entity.BoMon = null;
		}
	}
}
#pragma warning restore 1591
